
// ПРИКАЗЫ
Процедура ВыводПриказОЗачислении(Документ,ТабДок,Руководитель) Экспорт
	Макет = ПолучитьОбщийМакет("ПриказОЗачислении");
	ОбластьОписание1 = Макет.ПолучитьОбласть("ОбластьОписание1");
	ОбластьТаблШапка = Макет.ПолучитьОбласть("ОбластьТаблШапка");
	ОбластьТаблДанные = Макет.ПолучитьОбласть("ОбластьТаблДанные"); 
	ОбластьТаблДанные = Макет.ПолучитьОбласть("ОбластьТаблДанные");
	ОбластьОписание2 = Макет.ПолучитьОбласть("ОбластьОписание2");
	
	ОбластьОписание1.Параметры.Заполнить(Документ);
	ОбластьОписание1.Параметры.ДатаПриказа = Документ.ДатаПриказа;	
	ОбластьОписание1.Параметры.ДатаДействия = Формат(Документ.ДатаДействия, "ДФ=dd.MM.yyyy");
	ОбластьОписание1.Параметры.НомерПриказа = ПолучитьНомерПриказа(Документ.ДокументСсылка);
	
	ТабДок.Вывести(ОбластьОписание1, Документ.Уровень());
	ТабДок.Вывести(ОбластьТаблШапка, Документ.Уровень());

	Обучающиеся = Документ.Обучающиеся.Выбрать();
	Счетчик = 1;
	Пока Обучающиеся.Следующий() Цикл
		ОбластьТаблДанные.Параметры.нПП = Счетчик;
		ОбластьТаблДанные.Параметры.ФИОученика = Обучающиеся.ФИО;
		ОбластьТаблДанные.Параметры.ДатаРождения = Обучающиеся.ФИО.ДатаРождения;
		ОбластьТаблДанные.Параметры.Класс = Обучающиеся.Класс;
		ТабДок.Вывести(ОбластьТаблДанные, Документ.Уровень());
		
		Счетчик = Счетчик + 1;
	КонецЦикла;	
	
	ОбластьОписание2.Параметры.ФИОруководителя = ПолучитьИнициалы(Руководитель);
	ОбластьОписание2.Параметры.ДолжностьРуководителя = Руководитель.Должность;
	ТабДок.Вывести(ОбластьОписание2, Документ.Уровень());
	
	
КонецПроцедуры

Процедура ВыводПриказОПереводе(Документ,ТабДок,Руководитель) Экспорт
	Макет = ПолучитьОбщийМакет("ПриказОПереводе");
	ОбластьОписание1 = Макет.ПолучитьОбласть("ОбластьОписание1");
	ОбластьТаблШапка = Макет.ПолучитьОбласть("ОбластьТаблШапка");
	ОбластьТаблДанные = Макет.ПолучитьОбласть("ОбластьТаблДанные"); 
	ОбластьТаблДанные = Макет.ПолучитьОбласть("ОбластьТаблДанные");
	ОбластьОписание2 = Макет.ПолучитьОбласть("ОбластьОписание2");
	
	ОбластьОписание1.Параметры.Заполнить(Документ);
	ОбластьОписание1.Параметры.ДатаПриказа = Документ.ДатаПриказа;	
	ОбластьОписание1.Параметры.ДатаДействия = Формат(Документ.ДатаДействия, "ДФ=dd.MM.yyyy");
	ОбластьОписание1.Параметры.НомерПриказа = ПолучитьНомерПриказа(Документ.ДокументСсылка);
	
	ТабДок.Вывести(ОбластьОписание1, Документ.Уровень());
	ТабДок.Вывести(ОбластьТаблШапка, Документ.Уровень());
		

	ОбучающиесяЗапрос = Новый Запрос;
	ОбучающиесяЗапрос.Текст = "ВЫБРАТЬ 
							  |Обуч.ФИО Как ФИО,
							  |Обуч.Класс Как КлассЗачисления,
							  |Движения.Класс Как КлассОтчисления  
							  |ИЗ 
							  |Документ.ДвижениеОбучающихся.Обучающиеся Как Обуч 
							  |ЛЕВОЕ СОЕДИНЕНИЕ 
							  |РегистрСведений.ДвиженияОбучающихся.СрезПоследних(&ДатаДействия) Как Движения 
							  |По Обуч.ФИО = Движения.Обучающийся 
							  |ГДЕ Обуч.Ссылка = &Ссылка И Движения.Отчислен = Ложь"; 
	ОбучающиесяЗапрос.Параметры.Вставить("Ссылка", Документ.ДокументСсылка); 
	ОбучающиесяЗапрос.Параметры.Вставить("ДатаДействия", Документ.ДатаДействия - 60*60*24*1);
	Обучающиеся = ОбучающиесяЗапрос.Выполнить().Выбрать();
		
	
	Счетчик = 1;
	Пока Обучающиеся.Следующий() Цикл
		ОбластьТаблДанные.Параметры.нПП = Счетчик;
		ОбластьТаблДанные.Параметры.ФИОученика = Обучающиеся.ФИО;
		ОбластьТаблДанные.Параметры.КлассОтчисления = Обучающиеся.КлассОтчисления;
		ОбластьТаблДанные.Параметры.КлассЗачисления = Обучающиеся.КлассЗачисления;
		ТабДок.Вывести(ОбластьТаблДанные, Документ.Уровень());
		
		Счетчик = Счетчик + 1;
	КонецЦикла;	
	
	ОбластьОписание2.Параметры.ФИОруководителя = ПолучитьИнициалы(Руководитель);
	ОбластьОписание2.Параметры.ДолжностьРуководителя = Руководитель.Должность;
	ТабДок.Вывести(ОбластьОписание2, Документ.Уровень());
	
	
КонецПроцедуры

Процедура ВыводПриказОбОтчислении(Документ,ТабДок,Руководитель) Экспорт
	Макет = ПолучитьОбщийМакет("ПриказОбОтчислении");
	ОбластьОписание1 = Макет.ПолучитьОбласть("ОбластьОписание1");
	ОбластьТаблШапка = Макет.ПолучитьОбласть("ОбластьТаблШапка");
	ОбластьТаблДанные = Макет.ПолучитьОбласть("ОбластьТаблДанные"); 
	ОбластьТаблДанные = Макет.ПолучитьОбласть("ОбластьТаблДанные");
	ОбластьОписание2 = Макет.ПолучитьОбласть("ОбластьОписание2");
	
	ОбластьОписание1.Параметры.Заполнить(Документ);
	ОбластьОписание1.Параметры.ДатаПриказа = Документ.ДатаПриказа;	
	ОбластьОписание1.Параметры.ДатаДействия = Формат(Документ.ДатаДействия, "ДФ=dd.MM.yyyy");
	ОбластьОписание1.Параметры.НомерПриказа = ПолучитьНомерПриказа(Документ.ДокументСсылка);
	
	ТабДок.Вывести(ОбластьОписание1, Документ.Уровень());
	ТабДок.Вывести(ОбластьТаблШапка, Документ.Уровень());
		
	
	ОбучающиесяЗапрос = Новый Запрос;
	ОбучающиесяЗапрос.Текст = "ВЫБРАТЬ 
							  |Обуч.ФИО Как ФИО,
							  |Движения.Класс Как Класс  
							  |ИЗ 
							  |Документ.ДвижениеОбучающихся.Обучающиеся Как Обуч 
							  |ЛЕВОЕ СОЕДИНЕНИЕ 
							  |РегистрСведений.ДвиженияОбучающихся.СрезПоследних(&ДатаДействия) Как Движения 
							  |По Обуч.ФИО = Движения.Обучающийся 
							  |ГДЕ Обуч.Ссылка = &Ссылка И Движения.Отчислен = Ложь"; 
	ОбучающиесяЗапрос.Параметры.Вставить("Ссылка", Документ.ДокументСсылка); 
	ОбучающиесяЗапрос.Параметры.Вставить("ДатаДействия", Документ.ДатаДействия - 60*60*24*1);
	Обучающиеся = ОбучающиесяЗапрос.Выполнить().Выбрать();
		
	Счетчик = 1;
	Пока Обучающиеся.Следующий() Цикл
		ОбластьТаблДанные.Параметры.нПП = Счетчик;
		ОбластьТаблДанные.Параметры.ФИОученика = Обучающиеся.ФИО;
		ОбластьТаблДанные.Параметры.ДатаРождения = Обучающиеся.ФИО.ДатаРождения;
		ОбластьТаблДанные.Параметры.Класс = Обучающиеся.Класс;
		ТабДок.Вывести(ОбластьТаблДанные, Документ.Уровень());
		
		Счетчик = Счетчик + 1;
	КонецЦикла;
	
	
	ОбластьОписание2.Параметры.ФИОруководителя = ПолучитьИнициалы(Руководитель);
	ОбластьОписание2.Параметры.ДолжностьРуководителя = Руководитель.Должность;
	ТабДок.Вывести(ОбластьОписание2, Документ.Уровень());
	
	
КонецПроцедуры

Процедура ВыводПриказОбОкончанииОбучения(Документ,ТабДок,Руководитель) Экспорт 
	
	ОбучающиесяЗапрос = Новый Запрос;
	Обучающиеся = Неопределено;
	КлассыЗапрос = Новый Запрос;
	Классы = Неопределено;
	КлассыОтличники = Новый Массив;
	КлассыНеотличники = Новый Массив;
	
	// Получить список классов и количество в них отличников/неотличников
	ОбучающиесяЗапрос.Текст = "ВЫБРАТЬ 
							  |Обуч.ФИО Как ФИО,
							  |Обуч.Отличник Как Отличник,
							  |Движения.Класс Как Класс  
							  |ИЗ 
							  |Документ.ДвижениеОбучающихся.Обучающиеся Как Обуч 
							  |ЛЕВОЕ СОЕДИНЕНИЕ 
							  |РегистрСведений.ДвиженияОбучающихся.СрезПоследних(&ДатаДействия) Как Движения 
							  |По Обуч.ФИО = Движения.Обучающийся 
							  |ГДЕ Обуч.Ссылка = &Ссылка И Движения.Отчислен = Ложь"; 
	ОбучающиесяЗапрос.Параметры.Вставить("Ссылка", Документ.ДокументСсылка); 
	ОбучающиесяЗапрос.Параметры.Вставить("ДатаДействия", Документ.ДатаДействия - 60*60*24*1);
	Обучающиеся = ОбучающиесяЗапрос.Выполнить().Выбрать(); 
		
	КлассыЗапрос.Текст = "ВЫБРАТЬ
	                     |	МАКСИМУМ(Обуч.Отличник) = Истина КАК ЕстьОтличники,
	                     |	МИНИМУМ(Обуч.Отличник) = ЛОЖЬ КАК ЕстьНеотличники,
	                     |	Движения.Класс КАК Класс
	                     |ИЗ
	                     |	Документ.ДвижениеОбучающихся.Обучающиеся КАК Обуч
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДвиженияОбучающихся.СрезПоследних(&ДатаДействия, ) КАК Движения
	                     |		ПО Обуч.ФИО = Движения.Обучающийся
	                     |ГДЕ
	                     |	Обуч.Ссылка = &Ссылка
	                     |	И Движения.Отчислен = ЛОЖЬ
	                     |
	                     |СГРУППИРОВАТЬ ПО
	                     |	Движения.Класс"; 
	КлассыЗапрос.Параметры.Вставить("Ссылка", Документ.ДокументСсылка); 
	КлассыЗапрос.Параметры.Вставить("ДатаДействия", Документ.ДатаДействия - 60*60*24*1);
	Классы = КлассыЗапрос.Выполнить().Выбрать();
		
	Пока Классы.Следующий() Цикл
		Если Классы.ЕстьОтличники Тогда
			КлассыОтличники.Добавить(Классы.Класс.Наименование);		
		КонецЕсли;
		Если Классы.ЕстьНеотличники Тогда
			КлассыНеотличники.Добавить(Классы.Класс.Наименование);
		КонецЕсли;
	КонецЦикла;
	
	// На основании полученных классов выбрать макет
	Макет = Неопределено;
	Если КлассыОтличники.Количество() > 0 Тогда
		Если Найти(КлассыОтличники[0],"11") > 0 Тогда
			Макет = ПолучитьОбщийМакет("ПриказОбОкончанииОбучения11");
		Иначе
			Макет = ПолучитьОбщийМакет("ПриказОбОкончанииОбучения9");
		КонецЕсли;
	ИначеЕсли КлассыНеотличники.Количество() > 0 Тогда
		Если Найти(КлассыНеотличники[0],"11") > 0 Тогда
			Макет = ПолучитьОбщийМакет("ПриказОбОкончанииОбучения11");
		Иначе
			Макет = ПолучитьОбщийМакет("ПриказОбОкончанииОбучения9");
		КонецЕсли;
	Иначе
		Сообщить("Не найдено ни одного класса");
		Возврат;
	КонецЕсли;       
	
	ОбластьОписание1 = Макет.ПолучитьОбласть("ОбластьОписание1");
	ОбластьШапкаОтличники = Макет.ПолучитьОбласть("ОбластьШапкаОтличники");
	ОбластьКласс = Макет.ПолучитьОбласть("ОбластьКласс"); 
	ОбластьТаблДанные = Макет.ПолучитьОбласть("ОбластьТаблДанные");
	ОбластьШапкаНеотличники = Макет.ПолучитьОбласть("ОбластьШапкаНеотличники");
	ОбластьОписание2 = Макет.ПолучитьОбласть("ОбластьОписание2");
	
	ОбластьОписание1.Параметры.Заполнить(Документ);
	ОбластьОписание1.Параметры.ДатаПриказа = Формат(Документ.ДатаДействия, "ДФ=dd.MM.yyyy");	
	//ОбластьОписание1.Параметры.ДатаДействия = Формат(Документ.ДатаДействия, "ДФ=dd.MM.yyyy");
	ОбластьОписание1.Параметры.НомерПриказа = ПолучитьНомерПриказа(Документ.ДокументСсылка);
	
	ТабДок.Вывести(ОбластьОписание1, Документ.Уровень());
	
	Счетчик = 1; // Счетчик нумерации пунктов
	

	Если КлассыОтличники.Количество() <> 0 Тогда // Если есть отличники
		ОбластьШапкаОтличники.Параметры.Классы = СтрСоединить(КлассыОтличники,",");
		ОбластьШапкаОтличники.Параметры.Номер = Счетчик;
		ТабДок.Вывести(ОбластьШапкаОтличники, Документ.Уровень()); //Выводим пункт об отличниках
		Для Каждого Класс Из КлассыОтличники Цикл
			ОбластьКласс.Параметры.Класс = Класс;
			ТабДок.Вывести(ОбластьКласс, Документ.Уровень()); // Выводим классы в которых есть отличники
			Обучающиеся.Сбросить();
			СчетчикОбучающихся = 1;
			Пока Обучающиеся.Следующий() Цикл
				Если Обучающиеся.Класс.Наименование = Класс И Обучающиеся.Отличник Тогда
					ОбластьТаблДанные.Параметры.нПП = СчетчикОбучающихся;
					ОбластьТаблДанные.Параметры.ФИОученика = Обучающиеся.ФИО;
					ТабДок.Вывести(ОбластьТаблДанные, Документ.Уровень());
					СчетчикОбучающихся = СчетчикОбучающихся + 1;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		Счетчик = Счетчик + 1;	
	КонецЕсли; 
		
	Если КлассыНеотличники.Количество() <> 0 Тогда // Если есть неотличники
		ОбластьШапкаНеотличники.Параметры.Классы = СтрСоединить(КлассыНеотличники,",");
		ОбластьШапкаНеотличники.Параметры.Номер = Счетчик;
		ТабДок.Вывести(ОбластьШапкаНеотличники, Документ.Уровень()); //Выводим пункт об отличниках
		Для Каждого Класс Из КлассыНеотличники Цикл
			ОбластьКласс.Параметры.Класс = Класс;
			ТабДок.Вывести(ОбластьКласс, Документ.Уровень()); // Выводим классы в которых есть неотличники
			Обучающиеся.Сбросить();
			СчетчикОбучающихся = 1;
			Пока Обучающиеся.Следующий() Цикл
				Если Обучающиеся.Класс.Наименование = Класс И НЕ Обучающиеся.Отличник Тогда
					ОбластьТаблДанные.Параметры.нПП = СчетчикОбучающихся;
					ОбластьТаблДанные.Параметры.ФИОученика = Обучающиеся.ФИО;
					ТабДок.Вывести(ОбластьТаблДанные, Документ.Уровень());
					СчетчикОбучающихся = СчетчикОбучающихся + 1;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		Счетчик = Счетчик + 1;	
	КонецЕсли;
	
	ОбластьОписание2.Параметры.Номер1 = Счетчик;
	ОбластьОписание2.Параметры.Номер2 = Счетчик + 1;
	ОбластьОписание2.Параметры.ФИОруководителя = ПолучитьИнициалы(Руководитель);
	ОбластьОписание2.Параметры.ДолжностьРуководителя = Руководитель.Должность;
	ОбластьОписание2.Параметры.ДатаДействия = Формат(Документ.ДатаДействия, "ДЛФ=DD");
	ТабДок.Вывести(ОбластьОписание2, Документ.Уровень());
	
	
КонецПроцедуры

Процедура ВыводПриказНовыйУчебныйГод(Документ,ТабДок,Руководитель) Экспорт 
	
	ОбучающиесяЗапрос = Новый Запрос;
	Обучающиеся = Неопределено;
	
	// Получить список классов 1-8, 10
	КлассыЗапрос = Новый Запрос("ВЫБРАТЬ
	                            |	МИНИМУМ(Обуч.Условно) = ЛОЖЬ КАК ЕстьНеУсловноПереведенные,
	                            |	Движения.Класс КАК Класс,
								|	Движения.Класс.Параллель.Порядок + 1 Как Параллель
	                            |ИЗ
	                            |	Документ.ДвижениеОбучающихся.Обучающиеся КАК Обуч
	                            |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДвиженияОбучающихся.СрезПоследних(&ДатаДействия, ) КАК Движения
	                            |		ПО Обуч.ФИО = Движения.Обучающийся
	                            |ГДЕ
	                            |	Обуч.Ссылка = &Ссылка
	                            |	И Движения.Отчислен = ЛОЖЬ
	                            |	И Движения.Класс.Параллель.Порядок + 1 <> 9
	                            |	И Движения.Класс.Параллель.Порядок + 1 <> 11
	                            |
	                            |СГРУППИРОВАТЬ ПО
	                            |	Движения.Класс
	                            |
	                            |УПОРЯДОЧИТЬ ПО
	                            |	Движения.Класс.Параллель.Порядок"); 
	КлассыЗапрос.Параметры.Вставить("Ссылка", Документ.ДокументСсылка); 
	КлассыЗапрос.Параметры.Вставить("ДатаДействия", Документ.ДатаДействия - 60*60*24*1);
	КлассыВыборка = КлассыЗапрос.Выполнить().Выбрать();
	// Записываем подходящие классы в массив
	Классы = Новый Массив;
	Пока КлассыВыборка.Следующий() Цикл
		Если КлассыВыборка.ЕстьНеУсловноПереведенные Тогда
			КлассСтр = Новый Структура();
			КлассСтр.Вставить("Класс",КлассыВыборка.Класс);
			КлассСтр.Вставить("Параллель",КлассыВыборка.Параллель);	
			Классы.Добавить(КлассСтр);		
		КонецЕсли;
	КонецЦикла;
	
	ПараллелиЗапрос = Новый Запрос("ВЫБРАТЬ
	                              |	МИНИМУМ(Обуч.Условно) = ЛОЖЬ КАК ЕстьНеУсловноПереведенные,
	                              |	Движения.Класс.Параллель.Порядок + 1 КАК Параллель
	                              |ИЗ
	                              |	Документ.ДвижениеОбучающихся.Обучающиеся КАК Обуч
	                              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДвиженияОбучающихся.СрезПоследних(&ДатаДействия, ) КАК Движения
	                              |		ПО Обуч.ФИО = Движения.Обучающийся
	                              |ГДЕ
	                              |	Обуч.Ссылка = &Ссылка
	                              |	И Движения.Отчислен = ЛОЖЬ
	                              |	И Движения.Класс.Параллель.Порядок + 1 <> 9
	                              |	И Движения.Класс.Параллель.Порядок + 1 <> 11
	                              |
	                              |СГРУППИРОВАТЬ ПО
	                              |	Движения.Класс.Параллель
	                              |
	                              |УПОРЯДОЧИТЬ ПО
	                              |	Движения.Класс.Параллель.Порядок");
	ПараллелиЗапрос.Параметры.Вставить("Ссылка", Документ.ДокументСсылка); 
	ПараллелиЗапрос.Параметры.Вставить("ДатаДействия", Документ.ДатаДействия - 60*60*24*1);
	ПараллелиВыборка = ПараллелиЗапрос.Выполнить().Выбрать();
	Параллели = Новый Массив;
	Пока ПараллелиВыборка.Следующий() Цикл
		Если ПараллелиВыборка.ЕстьНеУсловноПереведенные Тогда
			Параллели.Добавить(ПараллелиВыборка.Параллель);		
		КонецЕсли;
	КонецЦикла;
	
	//Получаем макет и все области
	Макет = ПолучитьОбщийМакет("ПриказНовыйУчебныйГод");
	ОбластьОписание1 = Макет.ПолучитьОбласть("ОбластьОписание1");
	ОбластьШапкаПеревод = Макет.ПолучитьОбласть("ОбластьШапкаПеревод");
	ОбластьТаблШапка = Макет.ПолучитьОбласть("ОбластьТаблШапка");  
	ОбластьТаблКласс = Макет.ПолучитьОбласть("ОбластьТаблКласс");
	ОбластьТаблДанные = Макет.ПолучитьОбласть("ОбластьТаблДанные");
	ОбластьШапкаУсловно = Макет.ПолучитьОбласть("ОбластьШапкаУсловно");
	ОбластьТаблУсловноШапка = Макет.ПолучитьОбласть("ОбластьТаблУсловноШапка");
	ОбластьТаблУсловноДанные = Макет.ПолучитьОбласть("ОбластьТаблУсловноДанные");
	ОбластьОписание2 = Макет.ПолучитьОбласть("ОбластьОписание2");
	
	//Заполняем шапку документа
	ОбластьОписание1.Параметры.Заполнить(Документ);
	ОбластьОписание1.Параметры.ДатаПриказа = Формат(Документ.ДатаДействия, "ДФ=dd.MM.yyyy");	
	ОбластьОписание1.Параметры.НомерПриказа = ПолучитьНомерПриказа(Документ.ДокументСсылка);	
	ТабДок.Вывести(ОбластьОписание1, Документ.Уровень());
	
	Счетчик = 1; // Счетчик нумерации пунктов
	// Получить список учеников для каждой параллели и вывести по классам
	Для Каждого Параллель Из Параллели Цикл  
		//Выводим заголовок для параллели
		ОбластьШапкаПеревод.Параметры.Номер = Счетчик;
		ОбластьШапкаПеревод.Параметры.ИзКласс = Параллель;
		ОбластьШапкаПеревод.Параметры.ВКласс = Параллель + 1;
		ТабДок.Вывести(ОбластьШапкаПеревод, Документ.Уровень());
		Счетчик = Счетчик + 1;
		
		ТабДок.Вывести(ОбластьТаблШапка, Документ.Уровень()); //шапка таблицы
		Для Каждого Класс Из Классы Цикл
			Если Класс.Параллель <> Параллель Тогда
				Продолжить;
			КонецЕсли;
			ОбучающиесяЗапрос.Текст = "ВЫБРАТЬ 
							  		|Обуч.ФИО Как ФИО,
							  		|Обуч.Отличник Как Отличник,
							  		|Движения.Класс Как Класс  
							  		|ИЗ 
							  		|Документ.ДвижениеОбучающихся.Обучающиеся Как Обуч 
							  		|ЛЕВОЕ СОЕДИНЕНИЕ 
							  		|РегистрСведений.ДвиженияОбучающихся.СрезПоследних(&ДатаДействия) Как Движения 
							  		|По Обуч.ФИО = Движения.Обучающийся 
							 		|ГДЕ Обуч.Ссылка = &Ссылка И Движения.Отчислен = Ложь И Движения.Класс = &Класс И Обуч.Условно <> Истина"; 
			ОбучающиесяЗапрос.Параметры.Вставить("Ссылка", Документ.ДокументСсылка); 
			ОбучающиесяЗапрос.Параметры.Вставить("ДатаДействия", Документ.ДатаДействия - 60*60*24*1);
			ОбучающиесяЗапрос.Параметры.Вставить("Класс", Класс.Класс);
			Обучающиеся = ОбучающиесяЗапрос.Выполнить().Выбрать();
			
			Если Обучающиеся.Количество() = 0 Тогда
				Продолжить;	
			КонецЕсли;
			
			ОбластьТаблКласс.Параметры.Класс = Класс.Класс.Наименование;
			ТабДок.Вывести(ОбластьТаблКласс,Документ.Уровень());
			
			
			СчетчикОбучающихся = 1;
			Пока Обучающиеся.Следующий() Цикл
				ОбластьТаблДанные.Параметры.Номер = СчетчикОбучающихся;
				ОбластьТаблДанные.Параметры.ФИО = Обучающиеся.ФИО.Наименование;
				ТабДок.Вывести(ОбластьТаблДанные,Документ.Уровень());
				СчетчикОбучающихся = СчетчикОбучающихся + 1;
			КонецЦикла;
			
		КонецЦикла;	
	КонецЦикла;
	
	
	// Получить список классов и количество в них отличников/неотличников
	ОбучающиесяУсловноЗапрос = Новый Запрос("ВЫБРАТЬ 
							  		|Обуч.ФИО Как ФИО,
							  		|Обуч.Отличник Как Отличник,
							  		|Движения.Класс Как КлассОтчисления,
									|Классы.Ссылка Как КлассЗачисления  
							  		|ИЗ 
							  		|Документ.ДвижениеОбучающихся.Обучающиеся Как Обуч 
							  		|ЛЕВОЕ СОЕДИНЕНИЕ 
							  		|РегистрСведений.ДвиженияОбучающихся.СрезПоследних(&ДатаДействия) Как Движения 
							  		|По Обуч.ФИО = Движения.Обучающийся
									|ЛЕВОЕ СОЕДИНЕНИЕ
									|Справочник.Классы Как Классы
									|ПО 
									|	Движения.Класс.Параллель.Порядок + 1 = Классы.Параллель.Порядок 
									|	И Движения.Класс.Литера = Классы.Литера
							 		|ГДЕ Обуч.Ссылка = &Ссылка И Движения.Отчислен = Ложь И Обуч.Условно = Истина"); 
	ОбучающиесяУсловноЗапрос.Параметры.Вставить("Ссылка", Документ.ДокументСсылка); 
	ОбучающиесяУсловноЗапрос.Параметры.Вставить("ДатаДействия", Документ.ДатаДействия - 60*60*24*1);
	ОбучающиесяУсловно = ОбучающиесяУсловноЗапрос.Выполнить().Выбрать(); 	
	
	Если ОбучающиесяУсловно.Количество() <> 0 Тогда         
		ОбластьШапкаУсловно.Параметры.Номер = Счетчик;
		ТабДок.Вывести(ОбластьШапкаУсловно,Документ.Уровень());
		ТабДок.Вывести(ОбластьТаблУсловноШапка,Документ.Уровень());
		
		Счетчик = Счетчик + 1;
		СчетчикОбучающихся = 1;
		Пока ОбучающиесяУсловно.Следующий() Цикл
			ОбластьТаблУсловноДанные.Параметры.Номер = СчетчикОбучающихся;
			ОбластьТаблУсловноДанные.Параметры.ФИО = ОбучающиесяУсловно.ФИО.Наименование;
			ОбластьТаблУсловноДанные.Параметры.КлассОтчисления = ОбучающиесяУсловно.КлассОтчисления;
			ОбластьТаблУсловноДанные.Параметры.КлассЗачисления = ОбучающиесяУсловно.КлассЗачисления;
			ТабДок.Вывести(ОбластьТаблУсловноДанные,Документ.Уровень());
			
			СчетчикОбучающихся = СчетчикОбучающихся + 1;
		КонецЦикла
		
	КонецЕсли;
	
	
	ОбластьОписание2.Параметры.Номер1 = Счетчик;
	ОбластьОписание2.Параметры.Номер2 = Счетчик + 1;
	ОбластьОписание2.Параметры.Номер3 = Счетчик + 2;
	ОбластьОписание2.Параметры.ФИОруководителя = ПолучитьИнициалы(Руководитель);
	ОбластьОписание2.Параметры.ДолжностьРуководителя = Руководитель.Должность;

	ТабДок.Вывести(ОбластьОписание2, Документ.Уровень());
	
	
КонецПроцедуры

// СПРАВКИ

Процедура ВыводУниверсальнаяСправка(Документ,ТабДок,Руководитель) Экспорт
	Макет = ПолучитьОбщийМакет("УниверсальнаяСправка");
	ОбластьСправка = Макет.ПолучитьОбласть("ОбластьСправка");
	
	ОбластьСправка.Параметры.Заполнить(Документ);
	ОбластьСправка.Параметры.ФИОруководителя = ПолучитьИнициалы(Руководитель);	
	ОбластьСправка.Параметры.ДолжностьРуководителя = Руководитель.Должность;
	ОбластьСправка.Параметры.Номер = Документ.Номер;
	ОбластьСправка.Параметры.Дата = Формат(Документ.Дата, "ДЛФ=DD");
	ОбластьСправка.Параметры.КлРуководитель = ПолучитьИнициалы(Документ.КлассныйРуководитель);
	ОбластьСправка.Параметры.ФИО = Документ.Обучающийся.Наименование;
	ОбластьСправка.Параметры.ДатаРождения = Формат(Документ.Обучающийся.ДатаРождения, "ДЛФ=DD");
	ОбластьСправка.Параметры.Класс = Документ.Класс;
	
	ТабДок.Вывести(ОбластьСправка, Документ.Уровень());
	
	
КонецПроцедуры

Процедура ВыводУведомлениеОЗачисление(Документ,ТабДок,Руководитель) Экспорт
	Макет = ПолучитьОбщийМакет("УведомлениеОЗачислении");
	ОбластьСправка = Макет.ПолучитьОбласть("ОбластьСправка");
	
	ОбластьСправка.Параметры.Заполнить(Документ);
	ОбластьСправка.Параметры.ФИОруководителя = ПолучитьИнициалы(Руководитель);	
	ОбластьСправка.Параметры.ДолжностьРуководителя = Руководитель.Должность;
	ОбластьСправка.Параметры.Номер = Документ.Номер;
	ОбластьСправка.Параметры.Дата = Формат(Документ.Дата, "ДЛФ=DD");
	ОбластьСправка.Параметры.КлРуководитель = ПолучитьИнициалы(Документ.КлассныйРуководитель);
	ОбластьСправка.Параметры.ФИО = Документ.Обучающийся.Наименование;
	ОбластьСправка.Параметры.ДатаРождения = Формат(Документ.Обучающийся.ДатаРождения, "ДЛФ=DD");
	ОбластьСправка.Параметры.Класс = Документ.Класс;
	ОбластьСправка.Параметры.ДатаПриказа = Формат(Документ.ПриказОЗачислении.Дата, "ДЛФ=DD");
	ОбластьСправка.Параметры.НомерПриказа = ПолучитьНомерПриказа(Документ.ПриказОЗачислении);
//	ОбластьСправка.Параметры.ДатаОкончания = Формат(Документ.ДатаОкончанияОбучения, "ДЛФ=DD");
	
	ТабДок.Вывести(ОбластьСправка, Документ.Уровень());
	
	
КонецПроцедуры  

Процедура ВыводОтсутствиеАкадемическойЗадолжности(Документ,ТабДок,Руководитель) Экспорт
	Макет = ПолучитьОбщийМакет("ОтсутствиеАкадемическойЗадолжности");
	ОбластьСправка = Макет.ПолучитьОбласть("ОбластьСправка");
	
	ОбластьСправка.Параметры.Заполнить(Документ);
	ОбластьСправка.Параметры.ФИОруководителя = ПолучитьИнициалы(Руководитель);	
	ОбластьСправка.Параметры.ДолжностьРуководителя = Руководитель.Должность;
	ОбластьСправка.Параметры.Номер = Документ.Номер;
	ОбластьСправка.Параметры.Дата = Формат(Документ.Дата, "ДЛФ=DD");
	ОбластьСправка.Параметры.КлРуководитель = ПолучитьИнициалы(Документ.КлассныйРуководитель);
	ОбластьСправка.Параметры.ФИО = Документ.Обучающийся.Наименование;
	ОбластьСправка.Параметры.ДатаРождения = Формат(Документ.Обучающийся.ДатаРождения, "ДЛФ=DD");
	ОбластьСправка.Параметры.Класс = Документ.Класс;
	
	ТабДок.Вывести(ОбластьСправка, Документ.Уровень());
	
	
КонецПроцедуры	

Процедура ВыводСправкаПФР_Налоговая_СоцВыплаты(Документ,ТабДок,Руководитель) Экспорт
	Макет = ПолучитьОбщийМакет("ПФР_Налоговая_СоцВыплаты");
	ОбластьСправка = Макет.ПолучитьОбласть("ОбластьСправка");
	
	ОбластьСправка.Параметры.Заполнить(Документ);
	ОбластьСправка.Параметры.ФИОруководителя = ПолучитьИнициалы(Руководитель);	
	ОбластьСправка.Параметры.ДолжностьРуководителя = Руководитель.Должность;
	ОбластьСправка.Параметры.Номер = Документ.Номер;
	ОбластьСправка.Параметры.Дата = Формат(Документ.Дата, "ДЛФ=DD");
	ОбластьСправка.Параметры.КлРуководитель = ПолучитьИнициалы(Документ.КлассныйРуководитель);
	ОбластьСправка.Параметры.ФИО = Документ.Обучающийся.Наименование;
	ОбластьСправка.Параметры.ДатаРождения = Формат(Документ.Обучающийся.ДатаРождения, "ДЛФ=DD");
	ОбластьСправка.Параметры.Класс = Документ.Класс;
	ОбластьСправка.Параметры.ДатаПриказа = Формат(Документ.ПриказОЗачислении.Дата, "ДЛФ=DD");
	ОбластьСправка.Параметры.НомерПриказа = ПолучитьНомерПриказа(Документ.ПриказОЗачислении);
	ОбластьСправка.Параметры.ДатаОкончания = Формат(Документ.ДатаОкончанияОбучения, "ДЛФ=DD");
	
	ТабДок.Вывести(ОбластьСправка, Документ.Уровень());
	
	
КонецПроцедуры

Процедура ВыводТрудоустройство(Документ,ТабДок,Руководитель) Экспорт
	Макет = ПолучитьОбщийМакет("Трудоустройство");
	ОбластьСправка = Макет.ПолучитьОбласть("ОбластьСправка");
	
	ОбластьСправка.Параметры.Заполнить(Документ);
	ОбластьСправка.Параметры.ФИОруководителя = ПолучитьИнициалы(Руководитель);	
	ОбластьСправка.Параметры.ДолжностьРуководителя = Руководитель.Должность;
	ОбластьСправка.Параметры.Номер = Документ.Номер;
	ОбластьСправка.Параметры.Дата = Формат(Документ.Дата, "ДЛФ=DD");
	ОбластьСправка.Параметры.КлРуководитель = ПолучитьИнициалы(Документ.КлассныйРуководитель);
	ОбластьСправка.Параметры.ФИО = Документ.Обучающийся.Наименование;
	ОбластьСправка.Параметры.ДатаРождения = Формат(Документ.Обучающийся.ДатаРождения, "ДЛФ=DD");
	ОбластьСправка.Параметры.Класс = Документ.Класс;
	ОбластьСправка.Параметры.НачалоПериода = Формат(Документ.НачалоПериода, "ДЛФ=DD");
	ОбластьСправка.Параметры.КонецПериода = Формат(Документ.КонецПериода, "ДЛФ=DD");;
	
	
	ТабДок.Вывести(ОбластьСправка, Документ.Уровень());
	
	
КонецПроцедуры

// КОМПЕНСАЦИИ

Функция ВыводКомпенсацияПроезд(Документ,ТабДок,Родители) Экспорт
	Макет = ПолучитьОбщийМакет("КомпенсацияПроезд");
	Шапка = Макет.ПолучитьОбласть("ОбластьШапка");
	ОдинРебенок = Макет.ПолучитьОбласть("ОбластьОдинРебенок");
	ПервыйРебенок = Макет.ПолучитьОбласть("ОбластьПервыйРебенок");
	СреднийРебенок = Макет.ПолучитьОбласть("ОбластьСреднийРебенок");
	ПоследнийРебенок = Макет.ПолучитьОбласть("ОбластьПоследнийРебенок");
	
	Шапка.Параметры.Месяц = МесяцВСтроку(Месяц(Документ.МесяцВыплаты));
	Шапка.Параметры.Год = Формат(Год(Документ.МесяцВыплаты),"ЧГ=0");
	ТабДок.Вывести(Шапка, Документ.Уровень());
	
	Таблица = Документ.Обучающиеся.Выгрузить();
	
	СчетчикРодители = 1;
	СчетчикДети = 1;
	
	Пока Родители.Следующий() Цикл
		Отбор = Новый Структура;
		Отбор.Вставить("Родитель",Родители.Родитель);
		Отбор.Вставить("РодительДатаРождения",Родители.Родитель.ДатаРождения);
		ДетиСтроки = Таблица.НайтиСтроки(Отбор);
				
		Счетчик = 1;
		Для Каждого Строка Из ДетиСтроки Цикл 
			Область = Неопределено;
			ФлагЗаполнятьРодителя = Истина;
			Если Счетчик = 1 И ДетиСтроки.Количество() = 1 Тогда
				Область = ОдинРебенок;
			ИначеЕсли Счетчик = 1 Тогда
				Область = ПервыйРебенок;
			ИначеЕсли Счетчик = ДетиСтроки.Количество() Тогда
				Область = ПоследнийРебенок;
				ФлагЗаполнятьРодителя = Ложь;
			Иначе 
				Область = СреднийРебенок;
				ФлагЗаполнятьРодителя = Ложь;
			КонецЕсли;
			
			Если ФлагЗаполнятьРодителя Тогда
				Область.Параметры.НомерРодитель = Формат(СчетчикРодители,"ЧГ=0");
				Область.Параметры.РодительФИО = Строка.Родитель;
				Область.Параметры.Банк = Строка.Банк;
				Область.Параметры.РасчетныйСчет = Формат(Строка.РасчетныйСчет,"ЧГ=0");
				Область.Параметры.НомерУдостоверения = Формат(Строка.УдостоверениеМногодетныхНомер,"ЧЦ=6; ЧВН=;ЧГ=0");
				Область.Параметры.СрокДействия = Строка.СрокДействия;
				СчетчикРодители = СчетчикРодители + 1;
			КонецЕсли;
			
			Область.Параметры.НомерОбучающийся = Формат(СчетчикДети,"ЧГ=0");
			Область.Параметры.ОбучающийсяФИО = Строка.Обучающийся;
			Область.Параметры.Класс = Строка.Класс;
			СчетчикДети = СчетчикДети + 1;         
			
			ТабДок.Вывести(Область, Документ.Уровень());
			
			Счетчик = Счетчик + 1;
		КонецЦикла;
	КонецЦикла;	
	
	Возврат 3 + СчетчикДети;
	
КонецФункции

Функция ВыводКомпенсацияОдежда(Документ,ТабДок,Родители) Экспорт
	Макет = ПолучитьОбщийМакет("КомпенсацияОдежда");
	Шапка = Макет.ПолучитьОбласть("ОбластьШапка");
	ОдинРебенок = Макет.ПолучитьОбласть("ОбластьОдинРебенок");
	ПервыйРебенок = Макет.ПолучитьОбласть("ОбластьПервыйРебенок");
	СреднийРебенок = Макет.ПолучитьОбласть("ОбластьСреднийРебенок");
	ПоследнийРебенок = Макет.ПолучитьОбласть("ОбластьПоследнийРебенок");
	
	Шапка.Параметры.Месяц = МесяцВСтроку(Месяц(Документ.МесяцВыплаты));
	Шапка.Параметры.Год = Формат(Год(Документ.МесяцВыплаты),"ЧГ=0");
	ТабДок.Вывести(Шапка, Документ.Уровень());
	
	Таблица = Документ.Обучающиеся.Выгрузить();
	
	СчетчикРодители = 1;
	СчетчикДети = 1;
	
	Пока Родители.Следующий() Цикл
		Отбор = Новый Структура;
		Отбор.Вставить("Родитель",Родители.Родитель);
		Отбор.Вставить("РодительДатаРождения",Родители.Родитель.ДатаРождения);
		ДетиСтроки = Таблица.НайтиСтроки(Отбор);
				
		Счетчик = 1;
		Для Каждого Строка Из ДетиСтроки Цикл 
			Область = Неопределено;
			ФлагЗаполнятьРодителя = Истина;
			Если Счетчик = 1 И ДетиСтроки.Количество() = 1 Тогда
				Область = ОдинРебенок;
			ИначеЕсли Счетчик = 1 Тогда
				Область = ПервыйРебенок;
			ИначеЕсли Счетчик = ДетиСтроки.Количество() Тогда
				Область = ПоследнийРебенок;
				ФлагЗаполнятьРодителя = Ложь;
			Иначе 
				Область = СреднийРебенок;
				ФлагЗаполнятьРодителя = Ложь;
			КонецЕсли;
			
			Если ФлагЗаполнятьРодителя Тогда
				Область.Параметры.НомерРодитель = Формат(СчетчикРодители,"ЧГ=0");
				Область.Параметры.РодительФИО = Строка.Родитель;
				Область.Параметры.Банк = Строка.Банк;
				Область.Параметры.РасчетныйСчет = Формат(Строка.РасчетныйСчет,"ЧГ=0");
				Область.Параметры.НомерУдостоверения = Формат(Строка.УдостоверениеМногодетныхНомер,"ЧЦ=6; ЧВН=;ЧГ=0");
				Область.Параметры.СрокДействия = Строка.СрокДействия;
				СчетчикРодители = СчетчикРодители + 1;
			КонецЕсли;
			
			Область.Параметры.НомерОбучающийся = Формат(СчетчикДети,"ЧГ=0");
			Область.Параметры.ОбучающийсяФИО = Строка.Обучающийся;
			Область.Параметры.Класс = Строка.Класс;
			Область.Параметры.Сумма = Строка.Сумма;
			СчетчикДети = СчетчикДети + 1;
			
			ТабДок.Вывести(Область, Документ.Уровень());
			
			Счетчик = Счетчик + 1;
		КонецЦикла;
	КонецЦикла;	
	
	Возврат 3 + СчетчикДети;
	
КонецФункции