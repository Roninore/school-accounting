
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Ответ = ПолучитьАктуальныйПриказ(Объект.Ссылка);
	УстановитьОтбор();
	УстановитьУсловноеОформление();	
КонецПроцедуры     


&НаСервере
Функция ПолучитьАктуальныйПриказ(Ссылка)
	Отбор = Новый Структура("Обучающийся", Ссылка);
	Срез = РегистрыСведений.ДвиженияОбучающихся.СрезПоследних(ТекущаяДата(),Отбор);
	Если Срез.Количество() < 1 Тогда  // Если не найдено данных
		Элементы.Комментарий.Видимость = Ложь; // Скрываем динамические поля
		Элементы.Класс.Видимость = Ложь;
		Элементы.УчебныйГод.Видимость = Ложь;
		Отчислен = Ложь;
		
		Возврат Ложь;
	Иначе
		 АктуальныйПриказ = Срез[0].Регистратор;
		 ДатаДействия = АктуальныйПриказ.ДатаДействия;
		 ДатаПриказа = АктуальныйПриказ.Дата;
		 Класс = Срез[0].Класс; 
		 УчебныйГод = АктуальныйПриказ.УчебныйГод;
		 Комментарий = АктуальныйПриказ.Комментарий;
		 
		 ТипДокумента = АктуальныйПриказ.ТипДокумента;
		 
		Если ТипДокумента = Перечисления.ТипыДвиженияОбучающегося.ПустаяСсылка() Тогда
			Элементы.УчебныйГод.Видимость = Ложь;
			Элементы.Класс.Видимость = Ложь;
			Элементы.Комментарий.Видимость = Ложь;
			Отчислен = Ложь;
		ИначеЕсли ТипДокумента = Перечисления.ТипыДвиженияОбучающегося.Отчисление Тогда
			Элементы.УчебныйГод.Видимость = Ложь;
			Элементы.Класс.Видимость = Ложь;
			Элементы.Комментарий.Видимость = Истина;
			Отчислен = Истина;
		ИначеЕсли ТипДокумента = Перечисления.ТипыДвиженияОбучающегося.ОкончаниеОбучения Тогда
			Элементы.УчебныйГод.Видимость = Ложь;
			Элементы.Класс.Видимость = Ложь;
			Элементы.Комментарий.Видимость = Ложь;
			Отчислен = Истина;
		Иначе        
			Отчислен = Ложь;
			Элементы.УчебныйГод.Видимость = Истина;
			Элементы.Класс.Видимость = Истина;
			Элементы.Комментарий.Видимость = Ложь;
		КонецЕсли;
		
		 Возврат Истина;
	КонецЕсли
КонецФункции

&НаКлиенте
Процедура УстановитьОтбор()

	ДвиженияОбучающегося.Отбор.Элементы.Очистить();
	
	НовЭлементОтбора = ДвиженияОбучающегося.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Обучающийся");
	НовЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	НовЭлементОтбора.ПравоеЗначение = Объект.Ссылка;	
	НовЭлементОтбора.Использование = Истина;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()      
	
	
	УсловноеОформление.Элементы.Очистить();
	               
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Аквамарин);
	               	               
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДвиженияОбучающегося.Регистратор");  
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;   
	ЭлементОтбора.ПравоеЗначение = АктуальныйПриказ;   
	ЭлементОтбора.Использование = Истина;      
	
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();       
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ДвиженияОбучающегося");
	ПолеОформления.Использование = Истина;
КонецПроцедуры                                                                                      

&НаКлиенте
Процедура ДвиженияОбучающегосяПриИзменении(Элемент)
	Ответ = ПолучитьАктуальныйПриказ(Объект.Ссылка); 
	УстановитьОтбор();
	УстановитьУсловноеОформление();	
	
КонецПроцедуры


