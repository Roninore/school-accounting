
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ Параметры.Свойство("Обучающиеся") Тогда
		Возврат;
	КонецЕсли;
		
	Для каждого Обучающийся Из Параметры.Обучающиеся Цикл
       Строка = Объект.Обучающиеся.Добавить();
	   Строка.ФИО = Обучающийся;
   КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТипДокументаПриИзменении(Элемент)
	НовоеЗначение = Объект.ТипДокумента;
	ОтобразитьПоля(НовоеЗначение);
	//ОтобразитьКлассы();
КонецПроцедуры


&НаСервере
Процедура ОтобразитьПоля(ТипДокумента)  
	
	Если ТипДокумента = Перечисления.ТипыДвиженияОбучающегося.ПустаяСсылка() Тогда
		Элементы.УчебныйГод.Видимость = Ложь;
		Элементы.ГруппаУстановитьКласс.Видимость = Ложь;
		Элементы.ОбучающиесяКласс.Видимость = Ложь;
		Элементы.Комментарий.Видимость = Ложь;   
		Элементы.ОбучающиесяОтличник.Видимость = Ложь;
		Элементы.ОбучающиесяУсловно.Видимость = Ложь;
		Элементы.ЗаполнитьКлассы.Видимость = Ложь; 
	ИначеЕсли ТипДокумента = Перечисления.ТипыДвиженияОбучающегося.Отчисление Тогда
		Элементы.УчебныйГод.Видимость = Ложь;
		Элементы.ГруппаУстановитьКласс.Видимость = Ложь; 
		Элементы.ОбучающиесяКласс.Видимость = Ложь;
		Элементы.Комментарий.Видимость = Истина;
    	Элементы.ОбучающиесяОтличник.Видимость = Ложь; 
		Элементы.ОбучающиесяУсловно.Видимость = Ложь;
		Элементы.ЗаполнитьКлассы.Видимость = Ложь;
	ИначеЕсли ТипДокумента = Перечисления.ТипыДвиженияОбучающегося.ОкончаниеОбучения Тогда
		Элементы.УчебныйГод.Видимость = Ложь;
		Элементы.ГруппаУстановитьКласс.Видимость = Ложь;
		Элементы.ОбучающиесяКласс.Видимость = Ложь;
		Элементы.Комментарий.Видимость = Ложь;
		Элементы.ОбучающиесяОтличник.Видимость = Истина;
		Элементы.ОбучающиесяУсловно.Видимость = Ложь;
		Элементы.ЗаполнитьКлассы.Видимость = Ложь;
	ИначеЕсли ТипДокумента = Перечисления.ТипыДвиженияОбучающегося.НовыйУчебныйГод Тогда
		Элементы.УчебныйГод.Видимость = Истина;
		Элементы.ГруппаУстановитьКласс.Видимость = Истина; 
		Элементы.ОбучающиесяКласс.Видимость = Истина;
		Элементы.Комментарий.Видимость = Ложь;
		Элементы.ОбучающиесяОтличник.Видимость = Ложь;
		Элементы.ОбучающиесяУсловно.Видимость = Истина;
		Элементы.ЗаполнитьКлассы.Видимость = Истина;
	Иначе
		Элементы.УчебныйГод.Видимость = Истина;
		Элементы.ГруппаУстановитьКласс.Видимость = Истина;
		Элементы.ОбучающиесяКласс.Видимость = Истина;
		Элементы.Комментарий.Видимость = Ложь;	
		Элементы.ОбучающиесяОтличник.Видимость = Ложь;
		Элементы.ОбучающиесяУсловно.Видимость = Ложь;
		Элементы.ЗаполнитьКлассы.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОтобразитьПоля(Объект.ТипДокумента);
КонецПроцедуры 

&НаКлиенте
Процедура ЗаполнитьКлассы(Команда)
	ЗаполнитьКлассыНаСервере();	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКлассыНаСервере()
	Если Объект.ДатаДействия = '00010101' Тогда
			Сообщить("Дата действия не задана");
			Возврат;
	КонецЕсли; 
						  				
	
	ЗапросОбучающиеся = Новый Запрос("ВЫБРАТЬ
							  		|Движения.Обучающийся Как ФИО,
							  		|Движения.Класс Как КлассОтчисления,
									|Классы.Ссылка  Как КлассЗачисления,
									|Движения.Класс.Параллель.Порядок + 1 Как ПараллельОтчисления
							  		|ИЗ 
							  		|РегистрСведений.ДвиженияОбучающихся.СрезПоследних(&ДатаДействия) Как Движения 
									|ЛЕВОЕ СОЕДИНЕНИЕ
									|Справочник.Классы Как Классы
									|ПО 
									|	Движения.Класс.Параллель.Порядок + 1 = Классы.Параллель.Порядок 
									|	И Движения.Класс.Литера = Классы.Литера
							 		|ГДЕ 
									|   Движения.Отчислен = Ложь
									|	И Движения.Класс.Параллель.Порядок+1 <> 9 
									|	И Движения.Класс.Параллель.Порядок+1 <> 11");
	ЗапросОбучающиеся.Параметры.Вставить("ДатаДействия", Объект.ДатаДействия - 60*60*24*1);
	Обучающиеся = ЗапросОбучающиеся.Выполнить().Выбрать();
		
	Пока Обучающиеся.Следующий() Цикл 
		КлассЗачисления = Обучающиеся.КлассЗачисления;
		Если Обучающиеся.КлассЗачисления = Справочники.Классы.ПустаяСсылка() ИЛИ Обучающиеся.КлассЗачисления = NULL Тогда
			Если Обучающиеся.КлассОтчисления <> Справочники.Классы.ПустаяСсылка() И Обучающиеся.КлассОтчисления <> NULL Тогда
				ВремСтрока = Строка(Обучающиеся.ПараллельОтчисления+1) + " " + Обучающиеся.КлассОтчисления.Литера;
				КлассЗачисления = ПолучитьКлассИзСтроки(ВремСтрока);
			КонецЕсли;	
		КонецЕсли;
		
		НоваяСтрока = Объект.Обучающиеся.Добавить();
		НоваяСтрока.ФИО = Обучающиеся.ФИО;
		НоваяСтрока.Отличник = Ложь;
		НоваяСтрока.Условно = Ложь;
		НоваяСтрока.Класс = КлассЗачисления;
	КонецЦикла;
			
КонецПроцедуры


&НаКлиенте
Процедура УстановитьКлассВыбранным(Команда)
	Для каждого ВыделеннаяСтрока Из Элементы.Обучающиеся.ВыделенныеСтроки Цикл
       Элементы.Обучающиеся.ДанныеСтроки(ВыделеннаяСтрока).Класс = КлассВыбор;
   КонецЦикла;
КонецПроцедуры

