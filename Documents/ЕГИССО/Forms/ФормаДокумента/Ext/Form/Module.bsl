
&НаКлиенте
Процедура ЗаполнитьОбучающихся(Команда)
	ЗаполнитьОбучающихсяНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОбучающихсяНаСервере()
	
	ЗапросТипЕГИССО = Новый Запрос("ВЫБРАТЬ
	                               |	ЕГИССО_ДанныеКатегорий.Наименование КАК Наименование,
	                               |	ЕГИССО_ДанныеКатегорий.LMSZID КАК LMSZID,
	                               |	ЕГИССО_ДанныеКатегорий.FormCode КАК FormCode,
	                               |	ЕГИССО_ДанныеКатегорий.amount КАК amount,
	                               |	ЕГИССО_ДанныеКатегорий.ТипЛьготы КАК ТипЛьготы,
	                               |	ЕГИССО_ДанныеКатегорий.categoryID.(
	                               |		Ссылка КАК Ссылка,
	                               |		НомерСтроки КАК НомерСтроки,
	                               |		Категория КАК Категория,
	                               |		Значение КАК Значение
	                               |	) КАК categoryID,
	                               |	ЕГИССО_ДанныеКатегорий.Ссылка КАК Ссылка,
	                               |	ЕГИССО_ДанныеКатегорий.measuryCode КАК measuryCode
	                               |ИЗ
	                               |	Справочник.ЕГИССО_ДанныеКатегорий КАК ЕГИССО_ДанныеКатегорий
	                               |ГДЕ
	                               |	ЕГИССО_ДанныеКатегорий.Ссылка = &Категория");
	ЗапросТипЕГИССО.УстановитьПараметр("Категория",Объект.ТипЕГИССО);
	КатегорияЕГИССО = ЗапросТипЕГИССО.Выполнить().Выбрать();
	Если НЕ КатегорияЕГИССО.Следующий() Тогда
		Сообщить("Не найден выбранный тип отчета ЕГИССО");
		Возврат;
	КонецЕсли;
	categoryID = КатегорияЕГИССО.categoryID.Выгрузить();
	
	ЗапросОбучающиеся = Новый Запрос("ВЫБРАТЬ
	                                 |	ДвиженияОбучающихсяСрезПоследних.Обучающийся КАК Обучающийся,
	                                 |	ДвиженияОбучающихсяСрезПоследних.Класс КАК Класс,
	                                 |	ОбучающиесяЛьготы.Заявитель КАК Заявитель,
	                                 |	ОбучающиесяЛьготы.ДатаПриказа КАК ДатаПриказа,
	                                 |	ОбучающиесяЛьготы.Начало КАК Начало,
	                                 |	ОбучающиесяЛьготы.Окончание КАК Окончание,
	                                 |	ОбучающиесяЛьготы.НаименованиеЛьготы КАК НаименованиеЛьготы,
	                                 |	ОбучающиесяЛьготы.Категория КАК Категория
	                                 |ИЗ
	                                 |	РегистрСведений.ДвиженияОбучающихся.СрезПоследних(&Дата, Отчислен = ЛОЖЬ) КАК ДвиженияОбучающихсяСрезПоследних
	                                 |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Обучающиеся.Льготы КАК ОбучающиесяЛьготы
	                                 |		ПО ДвиженияОбучающихсяСрезПоследних.Обучающийся = ОбучающиесяЛьготы.Ссылка
									 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЖурналЗаполненияЕГИССО.СрезПоследних(&Дата,
									 |																			ТипЕГИССО=&ТипЕГИССО И
									 |																			УчебныйГод=&УчебныйГод) КАК ЖурналЕГИССО
									 |		ПО ЖурналЕГИССО.Обучающийся = ДвиженияОбучающихсяСрезПоследних.Обучающийся
	                                 |ГДЕ
									 |	ЕСТЬNULL(ЖурналЕГИССО.Обучающийся, 0) = 0
	                                 |	И ОбучающиесяЛьготы.Начало МЕЖДУ &НачалоПериода И &КонецПериода
	                                 |	И ОбучающиесяЛьготы.НаименованиеЛьготы = &ТипЛьготы");
	ЗапросОбучающиеся.УстановитьПараметр("Дата",Объект.Дата);
	ЗапросОбучающиеся.УстановитьПараметр("НачалоПериода",Объект.УчебныйГод.Начало);
	ЗапросОбучающиеся.УстановитьПараметр("КонецПериода",Объект.УчебныйГод.Окончание);
	ЗапросОбучающиеся.УстановитьПараметр("ТипЛьготы",КатегорияЕГИССО.ТипЛьготы); 
	ЗапросОбучающиеся.УстановитьПараметр("ТипЕГИССО",КатегорияЕГИССО.Ссылка);
	ЗапросОбучающиеся.УстановитьПараметр("УчебныйГод",Объект.УчебныйГод);

	
	Выборка = ЗапросОбучающиеся.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		ФИО_Обуч = ПолучитьФИО(Выборка.Обучающийся.Наименование);
		ФИО_Родитель = ПолучитьФИО(Выборка.Заявитель.Наименование);
		Строка = Объект.Таблица.Добавить();
		
		Строка.Обучающийся = Выборка.Обучающийся;
		Строка.Родитель = Выборка.Заявитель;
		
		Строка.LMSZID = КатегорияЕГИССО.LMSZID;                  
		ОтборКатегории = Новый Структура("Категория",Выборка.Категория);
		НайденныеСтроки = categoryID.НайтиСтроки(ОтборКатегории); 
		Строка.categoryID = НайденныеСтроки[0].Значение;
		Строка.SNILS_recip = Выборка.Заявитель.СНИЛС; 
		Строка.FamilyName_recip = ФИО_Родитель.Фамилия; 
		Строка.Name_recip = ФИО_Родитель.Имя;
		Строка.Patronymic_recip = ФИО_Родитель.Отчество;
		Если Выборка.Заявитель.Пол = Перечисления.Пол.Мужской Тогда
			Строка.Gender_recip = Перечисления.Gender_recip.М;
		ИначеЕсли Выборка.Заявитель.Пол = Перечисления.Пол.Женский Тогда 
			Строка.Gender_recip = Перечисления.Gender_recip.Ж; 
		КонецЕсли; 
		Строка.BirthDate_recip = Выборка.Заявитель.ДатаРождения;
		Строка.doctype_recip = "03";
		Строка.doc_Series_recip = Выборка.Заявитель.ДокументСерия;
		Строка.doc_Number_recip = Выборка.Заявитель.ДокументНомер;
		Строка.doc_IssueDate_recip = Выборка.Заявитель.ДокументДатаВыдачи; 
		Строка.doc_Issuer_recip = Выборка.Заявитель.ДокументВыдан; 
		Строка.SNILS_reason = Выборка.Обучающийся.СНИЛС; 
		Строка.FamilyName_reason = ФИО_Обуч.Фамилия;
		Строка.Name_reason = ФИО_Обуч.Имя;
		Строка.Patronymic_reason = ФИО_Обуч.Отчество;
		Если Выборка.Обучающийся.Пол = Перечисления.Пол.Мужской Тогда
			Строка.Gender_reason = Перечисления.Gender_recip.М;
		ИначеЕсли Выборка.Обучающийся.Пол = Перечисления.Пол.Женский Тогда 
			Строка.Gender_reason = Перечисления.Gender_recip.Ж; 
		КонецЕсли;
		Строка.BirthDate_reason = Выборка.Обучающийся.ДатаРождения;
		Если Выборка.Обучающийся.Документ = Перечисления.Документы.ПаспортГражданинаРФ Тогда
			Строка.doctype_reason = "03";
		ИначеЕсли Выборка.Обучающийся.Документ = Перечисления.Документы.СвидетельствоОРождении Тогда
			Строка.doctype_reason = "05";			
		КонецЕсли;
		Строка.doc_Series_reason = Выборка.Обучающийся.ДокументСерия;
		Строка.doc_Number_reason = Выборка.Обучающийся.ДокументНомер;
		Строка.doc_IssueDate_reason = Выборка.Обучающийся.ДатаВыдачиДокумента;
		Строка.doc_Issuer_reason = Выборка.Обучающийся.ДокументВыдан;
		Строка.decision_date = Выборка.ДатаПриказа;
		Строка.dateStart = Выборка.Начало;
		Строка.dateFinish = Выборка.Окончание; 
		Строка.usingSign = Перечисления.usingSign.Нет;
		Строка.criteria = ""; 
		Строка.FormCode = КатегорияЕГИССО.FormCode;
		Строка.amount = КатегорияЕГИССО.amount;
		Строка.measuryCode = КатегорияЕГИССО.measuryCode;
		Строка.monetization = Ложь;
		Строка.content = ""; 
		Строка.comment = "";
		Строка.equivalentAmount = Строка.amount; 
	КонецЦикла;
	
КонецПроцедуры